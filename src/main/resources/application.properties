
# Service name
spring.application.name=auth-service

# Server port
server.port=8081

# Eureka client configuration
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true


#spring.datasource.url=jdbc:mysql://localhost:3306/Db1
#spring.datasource.username=root
#spring.datasource.password=root



# PostgreSQL DB Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/auth_db
spring.datasource.username=postgres
spring.datasource.password=admin123
#spring.datasource.driver-class-name=org.postgresql.Driver


#Hibernate JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect




# Google OAuth2 config
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo





